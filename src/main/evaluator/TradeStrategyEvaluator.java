/**
 * TradeStrategyEvaluator.java
 * 
 * This class will look at the list of algorithmic trade and give some sort of payoff
 * (profit or loss) from using the trading strategy.
 * 
 * */

package main.evaluator;
import java.util.List;

import main.implementations.order.Trade;

public class TradeStrategyEvaluator {
	
	private static final String ALGORITHMIC_BROKER_ID = "6969";	// Broker id generated by our system.
	private static final String BID = "B";
	private static final String ASK = "A";
	
	/**
	 * Constructor accepts list of algorithmic trades to evaluate.
	 * @param tradeList The list of algorithmic trades of TradeList type. 
	 * (TradeList type not yet implemented.)
	 * */
	public TradeStrategyEvaluator(List<Trade> tradeList) {
		this.tradeList = tradeList;
	}
	
	/**
	 * Gets the profit/loss value for the algorithmic trades within a trade list
	 * 
	 * @return the percentage gained. 
	 * */
	public double calculateProfitLoss() {
		double profit = 0;
		double purchasePrice = 0;
		
		for (Trade trade : tradeList) {
			if (ALGORITHMIC_BROKER_ID.equals(trade.getAskOrder().getSellerBrokerId())) {
				// We are the seller - value will be added to profits.
				profit += trade.evaluateTrade();
			} else if (ALGORITHMIC_BROKER_ID.equals(trade.getBidOrder().getBuyerBrokerId())) {
				// We are the buyer - value will be added to losses.
				purchasePrice += trade.evaluateTrade();
			}
		}
		
		System.out.println("Profit is: $" + profit + " Purchase price is: $" + purchasePrice);
		// Calculate percentage gained/lost
		double percent = (profit - purchasePrice)/purchasePrice;
		return percent;
	}
	
	private List<Trade> tradeList;
}
